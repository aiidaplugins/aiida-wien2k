[build-system]
requires = ['flit_core >=3.4,<4']
build-backend = 'flit_core.buildapi'

[project]
name = 'aiida-wien2k'
dynamic = ['version']
description = 'The official AiiDA plugin for WIEN2k'
authors = [{name = 'The AiiDA team', email = 'developers@aiida.net'}]
readme = 'README.md'
license = {file = 'LICENSE'}
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Framework :: AiiDA',
    'License :: OSI Approved :: MIT License',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
]
keywords = ['aiida', 'workflows']
requires-python = '>=3.8'
dependencies = [
    'aiida_core[atomic_tools]~=2.0',
    'fuzzywuzzy~=0.18.0',
]

[project.optional-dependencies]
dev = [
    'pgtest~=1.3',
    'pre-commit~=2.2',
    'pytest-regressions~=2.0',
]

[project.entry-points.'aiida.calculations']
'wien2k-run123_lapw' = 'aiida_wien2k.calculations.run123_lapw:Wien2kRun123Lapw'

[project.entry-points.'aiida.parsers']
'wien2k-scf123-parser' = 'aiida_wien2k.parsers.scf123:Wien2kScf123Parser'

[project.entry-points.'aiida.workflows']
'wien2k.scf123_wf' = 'aiida_wien2k.workflows.scf123_workchain:Wien2kScf123WorkChain'

[tool.isort]
profile = "black"

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'

[tool.pytest.ini_options]
filterwarnings = [
  'ignore:Creating AiiDA configuration folder.*:UserWarning',
  'ignore:Object of type .* not in session, .* operation along .* will not proceed:sqlalchemy.exc.SAWarning',
]
